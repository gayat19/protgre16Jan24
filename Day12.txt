
Transactions


create table accounts
(id int generated by default as identity primary key,
name varchar(20),
 balance dec(20,2))
 
 insert into accounts(name,balance) values('ramu',10000.22),('bimu',2000.7);
 commit;
 
 select * from accounts
 
 create or replace procedure transact_money(
	 sender int,
	 receiver int,
	 amount dec
 )
 language plpgsql
 as $$
 begin
   declare bal dec(20,2);
   sender_count int;
   receiver_count int;
   begin
	   select balance from accounts into bal where id = sender;
		bal := bal - amount;
	   select count(id) from accounts into sender_count where id=sender;
	   select count(id) from accounts into receiver_count where id=receiver;
	   update accounts set balance =balance-amount where id=sender;
	   update accounts set balance = balance+amount where id= receiver;
	   if bal >5000 and sender_count>0 and receiver_count>0 then
		  commit;
		else
		   rollback;
	  end if;
   end;
 end;$$;
 
 rollback;
  
  call transact_money(1,3,200.3);
  
  
 select * from film;
--------------------------------------------------------------
Cursor
https://www.postgresql.org/docs/16/sql-move.html

begin;
declare 
   film_cursor cursor for select * from film;
   
   fetch 10 from film_cursor;
   
   fetch RELATIVE   5 from film_cursor;
    
	
	fetch 10 from film_cursor;
	
	close film_cursor;
	
	rollback;
	
begin;

declare acc_cursor cursor for select * from accounts order by id;

fetch ABSOLUTE 1 from acc_cursor;

update accounts set balance = 25000.50 where current of acc_cursor;
fetch FIRST from acc_cursor;

rollback;
close acc_cursor;
select * from accounts;

  
  
  


